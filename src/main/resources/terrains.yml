openapi: 3.0.0
info:
  title: Terrains API
  description: This API manage the terrains
  version: 1.0.0
servers:
  - url: www.github.com
    description: Optional server description, e.g. Main (production) server
  - url: http://staging-api.example.com
    description: Optional server description, e.g. Internal staging server for testing
paths:
  /terrains:
    get:
      summary: Returns a list of terrains.
      description: give the courts list
      responses:
        '200':    # status code
          description: A list of terrains
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Terrains"
        '400':
          description: Bad request. The request was malformed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

        '404':
          description: Not found. The requested resource did not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      summary:  create tarif
      description: creer un tarif a partir des tous ses champs
      requestBody:
        description: create tarif with all fields and terrains
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestBodyTerrain'
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Terrain"
        '400':
          description: Bad request. The request was malformed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

        '404':
          description: Not found. The requested resource did not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: update
      description: update court
      requestBody:
        description: update fields court
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRequestBodyTerrain'
      responses:
        '200': # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Terrain"
        '400':
          description: Bad request. The request was malformed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

        '404':
          description: Not found. The requested resource did not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /terrains/{name}:
    get:
      summary: Returns a list of tarifs.
      description: Optional extended description in CommonMark or HTML.
      parameters:
        - in: path
          name: name    # Note the name is the same as in the path
          required: true
          schema:
            type: string
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Terrains"
        '400':
          description: Bad request. The request was malformed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

        '404':
          description: Not found. The requested resource did not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /terrains/{id}:
    delete:
      summary: delete an id by id .
      description: Allow terrain.
      parameters:
        - in: path
          name: id    # Note the name is the same as in the path
          required: true
          schema:
            type: integer
      responses:
        '200': # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Terrains"
        '400':
          description: Bad request. The request was malformed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

        '404':
          description: Not found. The requested resource did not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:

    Error:
      properties:
        uuid:
          type: string
          example: "65adc8f3-28e5-4772-8d1f-109616b01ae8"
        exceptionType:
          type: string
          example: "ResourceNotFoundException"
        message:
          type: string
          example: "Error message"
    Tarifs:
      properties:
        tarifList:
          type: array
          items:
            $ref: "#/components/schemas/Tarif"


    RequestBodyTerrain:
      type: object
      required:
        - nameTerrain

      properties:

        nameTerrain:
          $ref: "#/components/schemas/Name"
        namesHoraire:
          $ref: "#/components/schemas/Names"
        namesTarifs:
          $ref: "#/components/schemas/Names"

    UpdateRequestBodyTerrain:
      properties:
        id:
          type: integer
          format: int64
          example: 1
        nameTerrain:
          $ref: "#/components/schemas/Name"
        actif:
          type: boolean
          example: false
        namesHoraire:
          $ref: "#/components/schemas/Names"
        namesTarifs:
          $ref: "#/components/schemas/Names"


    Terrains:
      properties:
        terrainsList:
          type: array
          items:
            $ref: "#/components/schemas/Terrain"


    Terrain:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/Name"
        actif:
          type: boolean
          example: false
          description: by default is false
        tarifs:
          $ref: '#/components/schemas/Tarifs'
        horaires:
          $ref: "#/components/schemas/Horaires"

    Horaires:
      type: array
      items:
        $ref: "#/components/schemas/Horaire"

    Horaire:
      type: object
      properties:
        nameHoraire:
          $ref: "#/components/schemas/Name"
        startTime:
          $ref: '#/components/schemas/StartTime'
        endTime:
          $ref: '#/components/schemas/EndTime'
        dateHoraireSpecial:
          $ref: '#/components/schemas/Date'
        intervaleTemps:
          $ref: '#/components/schemas/Intervale'

    Tarif:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/Name"
        prix:
          type: number
          format: float
          example: 10.0
        startDate:
          type: string
          format: date
          example: 23-02-2020
        endDate:
          type: string
          format: date
          example: 23-02-2020
        startTime:
          type: string
          pattern: (?:[01]\d|2[0123]):(?:[012345]\d)
          example: 00:00
        endTime:
          type: string
          pattern:  (?:[01]\d|2[0123]):(?:[012345]\d)
          example: 00:00
        weekend:
          type: boolean
          example: true
        actif:
          type: boolean
          example: true
        specialTarif:
          type: boolean
          example: true
        defaultTarif:
          type: boolean
          example: true
        terrains:
          $ref: "#/components/schemas/Terrains"

    StartTime:
      type: string
      pattern: (?:[01]\d|2[0123]):(?:[012345]\d)
      example: 00:00
    EndTime:
      type: string
      pattern:  (?:[01]\d|2[0123]):(?:[012345]\d)
      example: 00:00
    Date:
      type: string
      format: date
      example: 23-02-2020

    Intervale:
      description: allow to set the time per hour or per minutes for the reservation in minutes
      example: 30
      type: integer
      enum:
        - 15
        - 30
        - 60
      default: 30

    Names:
      type: array
      items:
        $ref: "#/components/schemas/Name"
    Name:
      type: string
      description: will be a generic name
      example: marian
